name: macOSでAV1/HE-AACv2にする

on:
  workflow_dispatch:
    inputs:
      video_url:
        description: '動画のURLを入力'
        required: true
      audio_format:
        description: '音声、通常は251'
        required: true
      video_format:
        description: '動画、通常は137'
        required: true

jobs:
  download-encode-upload:
    runs-on: macos-13
    steps:
      - name: Collect Workflow Telemetry
        uses: runforesight/workflow-telemetry-action@v1
      - name: 最初にCPUをチェック
        run: sysctl machdep.cpu.brand_string && sysctl -n hw.logicalcpu_max & mkdir ~/{.ffmpeg,.ffmpeg-build,.ffmpeg-src}
      - name: まずはaptをアップデート・必要なものを事前にインストール
        run: brew update && brew install automake fdk-aac git libass libtool libvorbis libvpx \opus sdl shtool texi2html theora x264 xvid nasm
      - name: SVT-AV1のビルド
        run: |
         cd ~/.ffmpeg-src && \
         git clone --depth=1 https://gitlab.com/AOMediaCodec/SVT-AV1.git && \
         cd SVT-AV1/Build && \
         cmake -G "Unix Makefiles" \
          -DCMAKE_INSTALL_PREFIX="$HOME/.ffmpeg-build" \
          -DCMAKE_BUILD_TYPE=Release \
          -DBUILD_DEC=OFF \
          -DBUILD_SHARED_LIBS=OFF .. && \
         make -j4 && \
         make install
      - name: ffmpegのビルド
        run: |
         cd ~/.ffmpeg-src && \
         wget https://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2 && \
         tar xf ffmpeg-snapshot.tar.bz2 && \
         cd ffmpeg && \
           PKG_CONFIG_PATH="$HOME/.ffmpeg-build/lib/pkgconfig" ./configure \
           --prefix="$HOME/.ffmpeg-build" \
           --pkg-config-flags="--static" \
           --extra-cflags="-I$HOME/.ffmpeg-build/include" \
           --extra-ldflags="-L$HOME/.ffmpeg-build/lib" \
           --extra-libs="-lpthread -lm" \
           --ld="g++" \
           --bindir="$HOME/.ffmpeg/bin" \
           --disable-ffplay \
           --enable-gpl \
           --enable-openssl \
           --enable-libaom \
           --enable-libfdk-aac \
           --enable-libass \
           --enable-libfreetype \
           --enable-libmp3lame \
           --enable-libopus \
           --enable-libsvtav1 \
           --enable-libvorbis \
           --enable-libvpx \
           --enable-libx264 \
           --enable-nonfree && \
         make -j8 && \
         make install
      - name: ffmpegのパス通す
        run: sudo cp -v ~/.ffmpeg/bin/ffmpeg /usr/local/bin
      - name: yt-dlpをインストール
        run: sudo curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o /usr/local/bin/yt-dlp && sudo chmod a+rx /usr/local/bin/yt-dlp
      - name: YouTube動画(音声も)ダウンロード
        run: yt-dlp -f ${{ github.event.inputs.video_format }} ${{ github.event.inputs.video_url }} -o video.mp4 & yt-dlp -f ${{ github.event.inputs.audio_format }} ${{ github.event.inputs.video_url }} -o audio.webm
      - name: Encode video with H.265
        run:  ffmpeg -i video.mp4 -i audio.webm -c:v libx265 -preset placebo -b:v 330k -tag:v hvc1 -c:a copy encoded.mp4
      - name: Upload video as artifact
        uses: actions/upload-artifact@v2
        with:
          name: encoded-video
          path: encoded.mp4
